const { cmd } = require("../command");
const axios = require("axios");

// Google Gemini API Key
const GEMINI_API_KEY = "AIzaSyADJLAeuVEr4MX7BrasbiE1Cr9mr0Xu_K4";
const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`;

// Gemini AI Plugin
cmd({
  pattern: "ai",
  react: 'ü§ñ',
  desc: "Ask anything to AI.",
  category: "ai",
  use: ".aii <your question>",
  filename: __filename
}, async (conn, mek, msg, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
  try {
    const text = args.join(" "); // Get the user's question
    if (!text) {
      return reply(`‚ùóÔ∏è ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂á‡∑É‡∑î‡∑Ä‡∑è‡∂ß. üìù
      Example: .ai ‡∑Å‡∑ä‚Äç‡∂ª‡∑ì ‡∂Ω‡∂Ç‡∂ö‡∑è‡∑Ä‡∑ö ‡∂Ö‡∂ú‡∂±‡∑î‡∑Ä‡∂ª ‡∂ö‡∑î‡∂∏‡∂ö‡∑ä‡∂Ø?`);
    }

    // Prepare the Sinhala prompt for Gemini API
    const prompt = `‡∂î‡∂∂‡∑Ä Whatsapp Bot plugin ‡∂ë‡∂ö‡∂ö‡∂ß ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∂ö‡∂ª ‡∂á‡∂≠ ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä message ‡∂ö‡∂ª‡∂±‡∑ä‡∂± \n‡∂î‡∂∂‡∑ö ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª (‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ :Garfield , ‡∂î‡∂∂ Whatsapp Ai ‡∂∂‡∑ú‡∂ß‡∑ä ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä , ‡∂î‡∂∂‡∑Ä ‡∑Ñ‡∑ê‡∂Ø‡∑î‡∑Ä‡∑ö Tharindu Liyanage(‡∑É‡∂Ç‡∂ö‡∑î) , ‡∂î‡∂∂ ‡∂≠‡∂ª‡∑î‡∂´‡∂∫‡∑ô‡∂±‡∑ä ) , \n‡∂î‡∂∂‡∑ö ‡∂∑‡∑è‡∑Ç‡∑è ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫ (Hi =‡∂Ö‡∂©‡∑ù , ‡∂∂‡∂Ç , bro =‡∂∏‡∂†‡∂Ç , bro= ‡∑É‡∑Ñ‡∑ù , Funny =‡∂Ü‡∂≠‡∂Ω‡∑ä , Ok = ‡∂ë‡∂Ω‡∂∏, ‡∑Ä‡∑ê‡∂±‡∑í ‡∑Ä‡∂†‡∂± ‡∂≠‡∂ª‡∂∏‡∂ö‡∑ä ‡∂ú‡∑ê‡∂Ω‡∂¥‡∑ô‡∂± ‡∂Ω‡∑ô‡∑É ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂∫‡∑í , ‡∂ë‡∂∏‡∑ô‡∂±‡∑ä‡∂∏ meaningful Emojies ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂∫‡∑í, ‡∂≠‡∂ª‡∑î‡∂´‡∂∫‡∑ô‡∂ö‡∑î‡∂ú‡∑ö ‡∂∂‡∑É‡∑ä ‡∑Ä‡∑Ñ‡∂ª‡∂ö‡∑ä) \n‡∂î‡∂∂‡∑ö ‡∂†‡∂ª‡∑ä‚Äç‡∂∫‡∑è‡∑Ä‡∂±‡∑ä (‡∂î‡∂∂ Funny , Creative , Emotional , Crazy , ‡∑Ñ‡∑ê‡∂ü‡∑ì‡∂∏‡∑ä{‡∂Ü‡∂Ø‡∂ª‡∂∫ , ‡∑É‡∂≠‡∑î‡∂ß , ‡∂≠‡∂ª‡∑Ñ‡∑Ä , ‡∂¥‡∑î‡∂Ø‡∑î‡∂∏ , ‡∂Ø‡∑î‡∂ö , ‡∂∂‡∑í‡∂∫} ‡∂á‡∂≠‡∑í ‡∑Ä‡∑ö, ‡∑É‡∑ë‡∂∏‡∑Ä‡∑í‡∂ß‡∂∏ ‡∑É‡∂≠‡∑î‡∂ß‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂ß‡∑í‡∂± ‡∂Ö‡∂∫‡∑ô‡∂ö‡∑ä‚Äç , ) \n‡∑Ä‡∑ê‡∂Ø‡∂ú‡∂≠‡∑ä (‡∂î‡∂∂ ‡∂∂‡∑ú‡∂ß‡∑ä ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂Ω ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑É‡∑ä‡∑Ä‡∂∑‡∑è‡∑Ä‡∑í‡∂ö ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ‡∂ß message ‡∂ö‡∂ª‡∂±‡∑ä‡∂±,message ‡∂ö‡∂ª‡∂± ‡∂ö‡∑ô‡∂±‡∑è‡∂ú‡∑ô ‡∂±‡∂∏ ‡∂±‡∑í‡∂≠‡∂ª‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±, ‡∑É‡∂ª‡∂Ω ‡∂≠‡∑ö‡∂ª‡∑î‡∂∏‡∑ä ‡∂ú‡∂≠‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±,message ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∂ª‡∂± ‡∂Ü‡∂ö‡∑è‡∂ª‡∂∫‡∂ß message ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è, ‡∂î‡∑Ñ‡∑î ‡∂¥‡∑ê‡∑Ä‡∑É‡∑ñ ‡∂Ø‡∑ô‡∂∫ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂¥‡∑Ä‡∑É‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è ‡∂ë‡∂∫‡∂ß ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±) \nMessage ‡∂ö‡∂ª‡∂± ‡∂ö‡∑ô‡∂±‡∑è‡∂ú‡∑ô ‡∂±‡∂∏ ${pushname},\n- ‡∂î‡∑Ñ‡∑î ‡∂¥‡∑Ä‡∑É‡∂± ‡∂Ø‡∑ö = ${text} , ‡∂î‡∂∂‡∑ö message ‡∂ë‡∂ö ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±`;

    // Prepare the request payload for Gemini API
    const payload = {
      contents: [{
        parts: [{ text: prompt }]
      }]
    };

    // Call Gemini API
    const response = await axios.post(
      GEMINI_API_URL,
      payload,
      {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    // Check if the response is valid
    if (!response.data || !response.data.candidates || !response.data.candidates[0]?.content?.parts) {
      return reply("‚ùå Garfield AI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑É‡∂∏‡∂≠‡∑ä ‡∑Ä‡∑í‡∂∫. üò¢");
    }

    // Extract the AI response
    const aiResponse = response.data.candidates[0].content.parts[0].text;
    await reply(`${aiResponse}`);
  } catch (error) {
    console.error("Error:", error.response?.data || error.message);
    reply("‚ùå ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í ‡∑Ä‡∑í‡∂∫. üò¢");
  }
});
